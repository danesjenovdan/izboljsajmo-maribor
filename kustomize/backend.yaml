apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: izboljsajmo-maribor-backend-pv-claim
  labels:
    app: izboljsajmo-maribor-backend
spec:
  storageClassName: 'scw-bssd-retain'
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: izboljsajmo-maribor-backend
  labels:
    app: izboljsajmo-maribor-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: izboljsajmo-maribor-backend
  template:
    metadata:
      labels:
        app: izboljsajmo-maribor-backend
    spec:
      volumes:
      - name: izboljsajmo-maribor-backend-persistent-storage
        persistentVolumeClaim:
          claimName: izboljsajmo-maribor-backend-pv-claim

      initContainers:
      - name: collectstatic
        image: backend
        volumeMounts:
        - name: izboljsajmo-maribor-backend-persistent-storage
          mountPath: /files
        command:
          - python
          - manage.py
          - collectstatic
          - --no-input
        envFrom:
          - secretRef:
              name: izboljsajmo-maribor-credentials
        resources:
          requests:
            memory: 1Gi
            cpu: 200m
          limits:
            memory: 1Gi
            cpu: 200m
      - name: migrate
        image: backend
        command:
          - python
          - manage.py
          - migrate
        envFrom:
          - secretRef:
              name: izboljsajmo-maribor-credentials
        resources:
          requests:
            memory: 1Gi
            cpu: 200m
          limits:
            memory: 1Gi
            cpu: 200m
      - name: compilemessages
        image: backend
        volumeMounts:
        - name: izboljsajmo-maribor-backend-persistent-storage
          mountPath: /files
        command:
          - python
          - manage.py
          - compilemessages
        envFrom:
          - secretRef:
              name: izboljsajmo-maribor-credentials
        resources:
          requests:
            memory: 1Gi
            cpu: 200m
          limits:
            memory: 1Gi
            cpu: 200m
      containers:
      - name: izboljsajmo-maribor-backend
        image: backend # kustomize thing
        volumeMounts:
        - name: izboljsajmo-maribor-backend-persistent-storage
          mountPath: /files
        command:
          - gunicorn
          - mb_initiative.wsgi:application
          - -b
          - 0.0.0.0:8000
          - --log-level
          - DEBUG
          - --workers
          - "1"
          - --threads
          - "3"
          - --timeout
          - "30"
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 10
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /v1/
            port: http
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 5
        envFrom:
          - secretRef:
              name: izboljsajmo-maribor-credentials
        # resources:
        #   requests:
        #     memory: 1Gi
        #     cpu: 1000m
        #   limits:
        #     memory: 1Gi
        #     cpu: 1000m
      - name: izboljsajmo-maribor-nginx
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        image: nginx:alpine
        volumeMounts:
        - name: izboljsajmo-maribor-backend-persistent-storage
          mountPath: /usr/share/nginx/html
        # resources:
        #   requests:
        #     memory: 500Mi
        #     cpu: 300m
        #   limits:
        #     memory: 500Mi
        #     cpu: 300m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: izboljsajmo-maribor-celery
  labels:
    app: izboljsajmo-maribor-celery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: izboljsajmo-maribor-celery
  template:
    metadata:
      labels:
        app: izboljsajmo-maribor-celery
    spec:
      containers:
      - name: izboljsajmo-maribor-backend
        image: backend # kustomize thing
        command: ['celery', '-A', 'mb_initiative', 'worker', '-l', 'DEBUG', '-B', '--scheduler', 'django_celery_beat.schedulers:DatabaseScheduler']
        envFrom:
          - secretRef:
              name: izboljsajmo-maribor-credentials
        resources:
          requests:
            memory: 1Gi
            cpu: 500m
          limits:
            memory: 1Gi
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: izboljsajmo-maribor-backend
spec:
  selector:
    app: izboljsajmo-maribor-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: izboljsajmo-maribor-nginx
spec:
  selector:
    app: izboljsajmo-maribor-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: izboljsajmo-maribor-backend
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/proxy-body-size: "6m"
    nginx.org/client-max-body-size: "6m"
spec:
  tls:
  - hosts:
    - api.izboljsajmo-maribor.k8s.djnd.si
    secretName: izboljsajmo-maribor-backend-tls
  rules:
  - host: api.izboljsajmo-maribor.k8s.djnd.si
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: izboljsajmo-maribor-backend
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: izboljsajmo-maribor-nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-production"
spec:
  tls:
  - hosts:
    - files.izboljsajmo-maribor.k8s.djnd.si
    secretName: izboljsajmo-maribor-nginx-tls
  rules:
  - host: files.izboljsajmo-maribor.k8s.djnd.si
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: izboljsajmo-maribor-nginx
            port:
              number: 80
